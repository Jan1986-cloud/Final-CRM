resolver 1.1.1.1 8.8.8.8 valid=300s; # Use public DNS resolvers
resolver_timeout 5s;

server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Proxy API requests to the backend service
    location /api/ {
        # Use a variable for the backend URL to allow for regex processing
        set $backend_url_cleaned $BACKEND_URL;

        # Use a regex to capture the valid part of the URL, excluding any trailing semicolon
        if ($backend_url_cleaned ~* "^(https?://[^;]+)") {
            set $backend_url_cleaned $1;
        }

        proxy_pass $FIXED_URL/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Handle client routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}

